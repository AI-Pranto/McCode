/*******************************************************************************
*
* McStas, neutron ray-tracing package
*         Copyright (C) 1997-2008, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Instrument: test
*
* %Identification
* Written by: Mads Bertelsen
* Date: September 2015
* Origin: University of Copenhagen
* Version: $Revision: 0.1 $
* %INSTRUMENT_SITE: Union_demos
*
* Simple test instrument for sample component.
*
* %Description
* simple test instrument for sample component.
*
* Example: filename="source_sct091_tu_02_1.dat" Detector: det_I=9.89304e+09
*
* %End
*******************************************************************************/

DEFINE INSTRUMENT test()

DECLARE
%{
int scattered_1;
int scattered_2;
int sample_1_index = 4;
int sample_2_index = 6;
%}

TRACE

COMPONENT Vanadium_incoherent = Incoherent_process(sigma=6.08,packing_factor=1,unit_cell_volume=13.827)
AT (0,0,0) ABSOLUTE

//COMPONENT Vanadium_incoherent_2 = Incoherent_process(sigma=5.09,packing_factor=0.9,unit_cell_volume=13.9)
//AT (0,0,0) ABSOLUTE

COMPONENT Vanadium = Union_make_material(my_absorption=2.1,process_string="Vanadium_incoherent")
AT (0,0,0) ABSOLUTE

COMPONENT Al_incoherent = Incoherent_process(sigma=3,packing_factor=1,unit_cell_volume=66.4)
AT (0,0,0) ABSOLUTE

COMPONENT Al = Union_make_material(my_absorption=4)
AT (0,0,0) ABSOLUTE

COMPONENT a1 = Progress_bar()
  AT (0,0,0) ABSOLUTE

COMPONENT source = Source_div(
//        xwidth=0.0005, yheight=0.0005,focus_aw=15, focus_ah=15,
        xwidth=0.0005, yheight=0.0005,focus_aw=3, focus_ah=2,
        E0 = 10,
        dE = 0)
  AT (0,0,0) RELATIVE a1 ROTATED (0,0,0) RELATIVE a1
/* TEST 1
COMPONENT test_geometry = Union_cylinder(radius=0.05,yheight=0.15,priority=59.2,material_string="Al")
AT (0,0,0.8) RELATIVE a1
ROTATED (-3,0,0) RELATIVE a1

COMPONENT test_geometry2 = Union_cylinder(radius=0.09,yheight=0.08,priority=52.1,material_string="Vanadium")
AT (0.07,0.02,0.8) RELATIVE a1
ROTATED (4,0,0) RELATIVE a1
*/

// Recreation of compile test.z
COMPONENT cryostat_wall = Union_cylinder(radius=0.1,yheight=0.3,priority=1,material_string="Al")
AT (0,0.05,1) RELATIVE a1
ROTATED (0,0,0) RELATIVE a1

COMPONENT cryostat_vacuum = Union_cylinder(radius=0.08,yheight=0.3,priority=2,material_string="Vacuum")
AT (0,0.075,1) RELATIVE a1
ROTATED (0,0,0) RELATIVE a1

COMPONENT sample_holder_base = Union_cylinder(radius=0.03,yheight=0.2,priority=20,material_string="Al")
AT (0,0.17,1) RELATIVE a1
ROTATED (0,0,0) RELATIVE a1

COMPONENT sample_1 = Union_cylinder(radius=0.01,yheight=0.03,priority=7,material_string="Vanadium")
AT (0.015,-0.01,1.015) RELATIVE a1
ROTATED (28,8,0) RELATIVE a1

COMPONENT sample_stick_1 = Union_cylinder(radius=0.0025,yheight=0.09,priority=6,material_string="Al")
AT (0.015,0.03,1.015) RELATIVE a1
ROTATED (0,0,0) RELATIVE a1

COMPONENT sample_2 = Union_cylinder(radius=0.01,yheight=0.04,priority=9,material_string="Vanadium")
AT (-0.015,0.01,1-0.015) RELATIVE a1
ROTATED (-6,-20,0) RELATIVE a1

COMPONENT sample_2_stick = Union_cylinder(radius=0.0025,yheight=0.1,priority=7,material_string="Al")
AT (-0.015,0.07,1-0.015) RELATIVE a1
ROTATED (0,0,0) RELATIVE a1

COMPONENT test_sample = Union_master()
AT(0,0,1) RELATIVE a1
EXTEND
%{
	if (scattered_flag[sample_1_index] > 0) scattered_1 = 1; else scattered_1 = 0;
	if (scattered_flag[sample_2_index] > 0) scattered_2 = 1; else scattered_2 = 0;
	
    // if (SCATTERED) printf("I scatter\n"); else printf("I do not scatter\n");
%}


COMPONENT m4pi = PSD_monitor_4PI(radius=1, nx=180, ny=180, filename="Events",restore_neutron=1)
  AT (0, 0, 1) RELATIVE a1

COMPONENT m4pi_1 = PSD_monitor_4PI(radius=1, nx=180, ny=180, filename="Events_1",restore_neutron=1) WHEN (scattered_1)
  AT (0, 0, 1) RELATIVE a1

COMPONENT m4pi_2 = PSD_monitor_4PI(radius=1, nx=180, ny=180, filename="Events_2",restore_neutron=1) WHEN (scattered_2)
  AT (0, 0, 1) RELATIVE a1

COMPONENT arm_1 = Arm()
  AT (0, 0, 1) RELATIVE a1
EXTEND
%{
	if (scattered_1 + scattered_2 != 2) ABSORB;
%}


COMPONENT m4pi_both = PSD_monitor_4PI(radius=1, nx=180, ny=180, filename="Events_12") WHEN (scattered_1 && scattered_2)
  AT (0, 0, 1) RELATIVE a1




END

