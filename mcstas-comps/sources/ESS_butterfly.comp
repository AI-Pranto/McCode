/*******************************************************************************
*
* McStas, neutron ray-tracing package
*         Copyright 1997-2016, All rights reserved
*         DTU Physics, Kongens Lyngby, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Component: ESS_butterfly
*
* %I
*
* Written by: Peter Willendrup and Esben Klinkby
* Date: April 2015
* Version: $Revision$
* Release: McStas 2.3
* Origin: DTU
*
* ESS butterfly moderator
*
* %D
* ESS butterfly moderator
*
* %P
* Input parameters:
*
* (none)
*
* %E
*******************************************************************************/

DEFINE COMPONENT ESS_butterfly
DEFINITION PARAMETERS ()
SETTING PARAMETERS (string sector="N",int beamline=1)
  OUTPUT PARAMETERS (cx, cz, sign_bl_angle, orientation_angle)
/* Neutron parameters: (x,y,z,vx,vy,vz,t,sx,sy,sz,p) */ 
DECLARE
%{
  /* Centering-parameters, which sector are we in? */
  double cx, cz;
  int sign_bl_angle;
  double orientation_angle;
%}

INITIALIZE
%{
  // if (beamline>=1 && beamline <=11) {
    /* Centering-parameters, which sector are we in? */
    if (strcasestr(sector,"N")) {
      cx = 0.117; cz=0.0; sign_bl_angle=1;
      orientation_angle = sign_bl_angle*(30.0 + (beamline-1)*6.0);
    } else if (strcasestr(sector,"W")) {
      cx = 0.0; cz=0.0; sign_bl_angle=-1;
      orientation_angle = 180 + sign_bl_angle*(30.0 + (beamline-1)*6.0);
    } else if (strcasestr(sector,"S")) {
      cx = 0.0; cz=-0.185; sign_bl_angle=1;
      orientation_angle = 180 + sign_bl_angle*(30.0 + (beamline-1)*6.0);
    } else if (strcasestr(sector,"E")) {
      cx = 0.117; cz=-0.185; sign_bl_angle=-1;
      orientation_angle = sign_bl_angle*(30.0 + (beamline-1)*6.0);
    } else {
      fprintf(stderr,"%s: Sector %s is undefined, please use N, W, S or E!\n", NAME_CURRENT_COMP,sector);
      exit(-1);
    }
  /* } else { */
  /*   fprintf(stderr,"%s: beamline no %i is undefined, please use 1 <= beamline <= 11\n", NAME_CURRENT_COMP,beamline); */
  /*   exit(-1); */
  /* } */
  printf("Setting up for sector %s, beamline %i, global orientation angle is %g\n",sector,beamline,orientation_angle);
%}

TRACE
%{
%}

MCDISPLAY
%{
%include "butterfly-geometry.c"
%}

END
